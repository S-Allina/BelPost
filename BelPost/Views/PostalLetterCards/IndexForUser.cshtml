@model IEnumerable<BelPost.Models.PostalLetterCard>

@{
    ViewData["Title"] = "Index";
}
<head>
    <link rel="stylesheet" href="~/css/PostageStamp.css" />
    <link rel="stylesheet" href="~/css/site.css" />

</head>
@await Html.PartialAsync("_SearchView")

@if (ViewBag.nameUser != null && ViewBag.nameUser != User.Identity.Name)
{
 
    <a class="submitBtn" asp-controller="Dialog" asp-action="IndexDialog" asp-route-IdReceiver="@ViewBag.nameUser">Написать</a>

}
   <form asp-action="IndexForUser" style="display:flex; gap:20px; align-items:baseline;">
        <h2 class="display-10">Фильтр</h2>
        <input value="@ViewBag.Type" name="type" hidden/>
         <input value="@ViewBag.nameUser" name="User" hidden/>

        <p>с</p>
        <input name="DateStart" type="date" class="FiltrYear form-control" style="border-radius: 5px;height: 80%;"/>
        <p>по</p>
        <input name="DateEnd" type="date" class="FiltrYear form-control" style="border-radius: 5px;height: 80%;" />
        <input class="btn" style="border:2px solid white; color:white" type="submit" />
    </form>
<div class="containerPostageStampCard" >
    @if (ViewBag.nameUser != null && ViewBag.nameUser != User.Identity.Name)
    {
        <nav class="navPost">
            <ul class="nav">
                <li><a asp-controller="Categories" asp-route-nameUser="@ViewBag.nameUser" asp-action="IndexForUser" class="nav-link" style="color:royalblue!important">Марки</a></li>
                <li><a asp-controller="PostalLetterCards" asp-route-User="@ViewBag.nameUser" asp-action="IndexForUser" asp-route-type="Letter" style="color:royalblue!important" class="nav-link">Конверты</a></li>
                <li><a asp-controller="PostalLetterCards" asp-route-User="@ViewBag.nameUser" asp-action="IndexForUser" asp-route-type="Card" style="color:royalblue!important" class="nav-link">Карточки</a></li>
            </ul>
        </nav>
    }
    else
    {
        <nav class="navPost">
            <ul class="nav">
                <li><a asp-controller="Categories" asp-action="IndexForUser" class="nav-link" style="color:royalblue!important">Марки</a></li>
                <li><a asp-controller="PostalLetterCards" asp-action="IndexForUser" asp-route-type="Letter" style="color:royalblue!important" class="nav-link">Конверты</a></li>
                <li><a asp-controller="PostalLetterCards" asp-action="IndexForUser" asp-route-type="Card" style="color:royalblue!important" class="nav-link">Карточки</a></li>
            </ul>
        </nav>
    }
    @foreach(var item in Model){
        <div class="PostageStampCard" style="height:420px; width:30%">
            <p class="PostageStampName name">
                @item.Name<br /><br />
            <span class="PostageStampNumber">Номер по катологу №@item.Number</span>
            </p>
            <p>Дата выпуска: @item.Date.ToString().Split(' ')[0]</p>
            @if (item.Type == "Card")
            {
                <div class="Cirle"><p>@item.Letter</p></div>
            }            <div class="imgContainer">
                @if (item.Img != null)
            {
                <img class="result-box" src="data:image/png;base64,@(Convert.ToBase64String(item.Img))" />
            }
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="containerCounter">
                 
                        @if (ViewBag.nameUser == null) {
                        <a asp-action="DeleteToUser" asp-route-idCard="@item.Id" asp-route-type="@item.Type">-</a>

                        <h1 id="Counter" style="color:black; font-size:14px;">
                            @await Component.InvokeAsync("Count", new {Name = User.Identity.Name, idStamp=item.Id,type=item.Type })
                        </h1>
                        <a asp-action="AddToUser" asp-route-idCard="@item.Id" asp-route-type="@item.Type">+</a>
                        }else{
                                                    <h1 id="Counter" style="color:black; font-size:14px;">

                            @await Component.InvokeAsync("Count", new {Name = ViewBag.nameUser, idStamp=item.Id,type=item.Type})
                        </h1>

                        }   
             
                </div>
            }
    </div>
    }
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var counters = document.querySelectorAll("#Counter");
        counters.forEach(function (counter) {
            var countText = counter.textContent;
            var counts = countText.split(" из ");
            if (parseInt(counts[0]) >= parseInt(counts[1])) {
                counter.closest(".PostageStampCard").style.border = "4px solid #1fbd1f";
            }
        });
    });
</script>
<script src="~/js/search.js"/>